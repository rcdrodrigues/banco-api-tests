{
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-25T17:11:42.942Z",
    "end": "2025-09-25T17:11:43.193Z",
    "duration": 251,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c6e389da-2a84-4fc2-afcd-8e5a08d69a0b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5279630a-f76b-43c7-a30b-f77ac2e216ae",
          "title": "Login",
          "fullFile": "C:\\Users\\origi\\Documents\\Mentoria_QA\\projetos\\banco-api-tests\\test\\login.test.js",
          "file": "\\test\\login.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2d5e8ec3-6067-4e63-8b63-f22a3bbc8e33",
              "title": "POST/ Login",
              "fullFile": "C:\\Users\\origi\\Documents\\Mentoria_QA\\projetos\\banco-api-tests\\test\\login.test.js",
              "file": "\\test\\login.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar 200 com um token em string quando credenciais válidas ",
                  "fullTitle": "Login POST/ Login Deve retornar 200 com um token em string quando credenciais válidas ",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request ('http://localhost:3000')\n    .post('/Login')\n    .set('Content-Type', 'application/json')\n    .send({\n        'username': 'julio.lima',\n        'senha': '123456'\n        });\n//console.log(resposta.status) \n//console.log(resposta.body)       \nexpect(resposta.status).to.equal(200);\nexpect(resposta.body.token).to.be.a('string');",
                  "err": {},
                  "uuid": "d9002ce7-8ef9-44f4-a808-93d3cf26e627",
                  "parentUUID": "2d5e8ec3-6067-4e63-8b63-f22a3bbc8e33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9002ce7-8ef9-44f4-a808-93d3cf26e627"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        },
        {
          "uuid": "4d670f4a-545e-4fee-82b1-43005ce3ec98",
          "title": "Transferências",
          "fullFile": "C:\\Users\\origi\\Documents\\Mentoria_QA\\projetos\\banco-api-tests\\test\\transferencia.test.js",
          "file": "\\test\\transferencia.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4443dfe5-d451-4924-961f-3314fd70077e",
              "title": "POST/ transferencias",
              "fullFile": "C:\\Users\\origi\\Documents\\Mentoria_QA\\projetos\\banco-api-tests\\test\\transferencia.test.js",
              "file": "\\test\\transferencia.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar sucesso com 201 quando o valor da transferência for igual ou acima de R$ 10,00.",
                  "fullTitle": "Transferências POST/ transferencias Deve retornar sucesso com 201 quando o valor da transferência for igual ou acima de R$ 10,00.",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaLogin = await request ('http://localhost:3000')\n    .post('/Login')\n    .set('Content-Type', 'application/json')\n    .send({\n    'username': 'julio.lima',\n    'senha': '123456'\n     });\n\nconst token =  respostaLogin.body.token \nconst resposta = await request ('http://localhost:3000')               \n    .post('/transferencias')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', `Bearer ${token}`) \n    .send({\n      contaOrigem: 1,\n      contaDestino: 2,\n      valor: 11,\n      //token: \"\"\n    })\n    expect(resposta.status).to.equal(201);\n\nconsole.log(resposta.body)",
                  "err": {},
                  "uuid": "4ab7c627-3799-4a5f-b429-8aef30973f73",
                  "parentUUID": "4443dfe5-d451-4924-961f-3314fd70077e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve retornar falha com 422 quando o valor da transferência for abaixo de R$ 10,00.",
                  "fullTitle": "Transferências POST/ transferencias Deve retornar falha com 422 quando o valor da transferência for abaixo de R$ 10,00.",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaLogin = await request ('http://localhost:3000')\n   .post('/Login')\n   .set('Content-Type', 'application/json')\n   .send({\n   'username': 'julio.lima',\n   'senha': '123456'\n    });\n            \n            const token =  respostaLogin.body.token \n\n            const resposta = await request ('http://localhost:3000')               \n   .post('/transferencias')\n   .set('Content-Type', 'application/json')\n   .set('Authorization', `Bearer ${token}`) \n   .send({\n     contaOrigem: 1,\n     contaDestino: 2,\n     valor: 9,\n     //token: \"\"\n   })\n   expect(resposta.status).to.equal(422);",
                  "err": {},
                  "uuid": "02a76dab-43b1-42e0-b5cc-3af484bfbb9a",
                  "parentUUID": "4443dfe5-d451-4924-961f-3314fd70077e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ab7c627-3799-4a5f-b429-8aef30973f73",
                "02a76dab-43b1-42e0-b5cc-3af484bfbb9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 126,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}